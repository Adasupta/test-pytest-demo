name: Run Pytest in Parallel on Separate Runners

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  QASE_TESTOPS_API_TOKEN: ${{ secrets.QASE_API_TOKEN }}
  QASE_TESTOPS_PROJECT: ${{ vars.QASE_TESTOPS_PROJECT }}
  QASE_TESTOPS_PLAN_ID: 5
  QASE_TESTOPS_RUN_COMPLETE: true

jobs:
  create-test-run:
    runs-on: ubuntu-latest
    outputs:
      run-id: ${{ steps.qase-run-create.outputs.id }}
    steps:
      - name: Create Qase Test Run
        id: qase-run-create
        uses: qase-tms/gh-actions/run-create@v1
        with:
          token: ${{ secrets.QASE_API_TOKEN }}
          project: ${{ vars.QASE_TESTOPS_PROJECT }}
          title: GitHub Actions Test Run
          description: Triggered from GitHub
          plan: ${{ vars.QASE_TESTOPS_PLAN_ID }}

  run-tests:
    needs: create-test-run
    strategy:
      matrix:
        worker_id: [1, 2]  # This ensures 2 parallel runners
    runs-on: ubuntu-latest  # Each job runs on its own runner (separate CPU)
    env:
      QASE_MODE: testops
      QASE_TESTOPS_API_TOKEN: ${{ secrets.QASE_API_TOKEN }}
      QASE_TESTOPS_PROJECT: ${{ vars.QASE_TESTOPS_PROJECT }}
      QASE_TESTOPS_PLAN_ID: ${{ vars.QASE_TESTOPS_PLAN_ID }}
      QASE_TESTOPS_RUN_ID: ${{ needs.create-test-run.outputs.run-id }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.13"

      - name: Install dependencies
        run: |
          pip install -r requirements.txt
          pip install qase-pytest pytest-xdist pytest-rerunfailures pytest-playwright
          playwright install-deps
          playwright install chromium

      - name: Run tests using xdist on Worker ${{ matrix.worker_id }}
        run: |
          echo "Running on Worker ${{ matrix.worker_id }}"
          pytest -n 2 --dist=loadscope --reruns 2 --browser chromium

  complete-test-run:
    needs: run-tests
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Complete Qase Test Run
        uses: qase-tms/gh-actions/run-complete@v1
        with:
          token: ${{ secrets.QASE_API_TOKEN }}
          project: ${{ vars.QASE_TESTOPS_PROJECT }}
          id: ${{ needs.create-test-run.outputs.run-id }}
