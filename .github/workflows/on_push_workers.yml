name: Run Pytest with xdist on separate runners

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  QASE_TESTOPS_API_TOKEN: ${{ secrets.QASE_API_TOKEN }}
  QASE_TESTOPS_PROJECT: ${{ vars.QASE_TESTOPS_PROJECT }}
  QASE_TESTOPS_RUN_COMPLETE: true
  QASE_TESTOPS_PLAN_ID: 5

jobs:
  create-test-run:
    runs-on: ubuntu-latest
    outputs:
      run-id: ${{ steps.qase-run-create.outputs.id }}
    steps:
      - name: Create a Qase test run
        id: qase-run-create
        uses: qase-tms/gh-actions/run-create@v1
        with:
          token: ${{ secrets.QASE_API_TOKEN }}
          project: ${{ vars.QASE_TESTOPS_PROJECT }}
          title: Automated Test Run from GitHub Actions
          description: This test run was triggered by a GitHub Actions workflow.
          plan: ${{ vars.QASE_TESTOPS_PLAN_ID }}

  run-tests:
    needs: create-test-run
    strategy:
      matrix:
        runner: [1, 2]    # two parallel jobs, two runners, isolated CPU resources
    runs-on: ubuntu-latest
    env:
      QASE_MODE: testops
      QASE_TESTOPS_API_TOKEN: ${{ secrets.QASE_API_TOKEN }}
      QASE_TESTOPS_PROJECT: ${{ vars.QASE_TESTOPS_PROJECT }}
      QASE_TESTOPS_PLAN_ID: ${{ vars.QASE_TESTOPS_PLAN_ID }}
      QASE_TESTOPS_RUN_ID: ${{ needs.create-test-run.outputs.run-id }}
      
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.13

      - name: Cache Python dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies including pytest-xdist and Qase plugin
        run: |
          pip install -r requirements.txt
          pip install qase-pytest pytest-xdist
          playwright install-deps
          playwright install webkit

      - name: Run Pytest on Worker ${{ matrix.runner }}
        run: |
          echo "Running tests on runner ${{ matrix.runner }}"
          pytest -n 1 --browser chromium

  complete-test-run:
    needs: run-tests
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Complete the Qase test run
        uses: qase-tms/gh-actions/run-complete@v1
        with:
          token: ${{ secrets.QASE_API_TOKEN }}
          project: ${{ vars.QASE_TESTOPS_PROJECT }}
          id: ${{ needs.create-test-run.outputs.run-id }}
