name: Pytest Parallel Test Split with Separate Runners

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  QASE_TESTOPS_API_TOKEN: ${{ secrets.QASE_API_TOKEN }}
  QASE_TESTOPS_PROJECT: ${{ vars.QASE_TESTOPS_PROJECT }}
  QASE_TESTOPS_RUN_COMPLETE: true
  QASE_TESTOPS_RUN_ID: 10

jobs:

  # You need a job to create the Qase test run if you want dynamic run-id
  # create-test-run:
  #   runs-on: ubuntu-latest
  #   outputs:
  #     run-id: ${{ steps.create-run.outputs.run-id }}
  #   steps:
  #     - name: Create Qase TestOps Run
  #       id: create-run
  #       uses: qase-tms/gh-actions/run-create@v1
  #       with:
  #         token: ${{ secrets.QASE_API_TOKEN }}
  #         project: ${{ vars.QASE_TESTOPS_PROJECT }}
  #         title: "Automated Test Run"

  test-split-1:
    runs-on: ubuntu-latest
    env:
      QASE_MODE: testops
      QASE_TESTOPS_RUN_ID: ${{ env.QASE_TESTOPS_RUN_ID }}
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      - name: Install dependencies
        run: |
          pip install -r requirements.txt
          pip install qase-pytest pytest-xdist pytest-rerunfailures playwright
          playwright install-deps
          playwright install chromium

      - name: Run Group 1 Tests
        run: |
          pytest tests/examples/ -n 1 --reruns 2 --browser chromium

  test-split-2:
    runs-on: ubuntu-latest
    env:
      QASE_MODE: testops
      QASE_TESTOPS_RUN_ID: ${{ env.QASE_TESTOPS_RUN_ID }}
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      - name: Install dependencies
        run: |
          pip install -r requirements.txt
          pip install qase-pytest pytest-xdist pytest-rerunfailures playwright
          playwright install-deps
          playwright install chromium

      - name: Run Group 2 Tests
        run: |
          pytest tests/examples/ -n 1 --reruns 2 --browser chromium

  complete-test-run:
    needs: [test-split-1, test-split-2]
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Complete Qase test run
        uses: qase-tms/gh-actions/run-complete@v1
        with:
          token: ${{ secrets.QASE_API_TOKEN }}
          project: ${{ vars.QASE_TESTOPS_PROJECT }}
          id: ${{ env.QASE_TESTOPS_RUN_ID }}
